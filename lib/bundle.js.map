{"version":3,"sources":["webpack:///webpack/bootstrap 7bf92ca339c082d4d59d","webpack:///./lib/paratroopers.js","webpack:///./lib/gameView.js","webpack:///./lib/game.js","webpack:///./lib/bomb.js","webpack:///./lib/util.js","webpack:///./lib/movingObject.js","webpack:///./lib/player_mouse.js","webpack:///./lib/item.js","webpack:///./lib/spawn_location.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;;AAEA;;AAEA;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,8BAA8B;AACzD;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACxLA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC5EA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;ACxCA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;AC/DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;ACdA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7bf92ca339c082d4d59d\n **/","var GameView = require('./gameView.js');\n\nvar canvasEl = document.getElementById(\"game-canvas\");\n\nvar ctx = canvasEl.getContext(\"2d\");\n\nnew GameView(ctx).start();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/paratroopers.js\n ** module id = 0\n ** module chunks = 0\n **/","var Game = require('./game.js');\n\nfunction GameView (ctx) {\n  this.game = new Game();\n  this.ctx = ctx;\n}\n\nGameView.prototype.start = function (){\n  setInterval(this.game.step.bind(this.game, this.ctx), 20);\n  setInterval(this.game.draw.bind(this.game, this.ctx), 20);\n};\n\nGameView.prototype.end = function (){\n\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameView.js\n ** module id = 1\n ** module chunks = 0\n **/","var Bomb = require('./bomb.js');\nvar PlayerMouse = require('./player_mouse');\nvar Util = require('./util');\nvar Item = require('./item');\nvar canvas = document.getElementById('game-canvas');\nvar SpawnLocation = require('./spawn_location');\n\nfunction Game() {\n  this.DIM_X = 800;\n  this.DIM_Y = 600;\n  this.NUM_BOMBS = 1;\n  this.playerMouse = new PlayerMouse();\n  this.score = 0;\n  this.gameOver = true;\n  this.highscore = 0;\n  this.SpawnLocation = new SpawnLocation(\n    { game: this, pos: [100, 100] }\n  );\n  this.bombs = this.addBombs();\n  this.item = [];\n  this.smallBombTimer = 100;\n  this.bigBombTimer = 400;\n}\n\nGame.prototype.addBombs = function(radius) {\n  var bombs = [];\n  for (var i = 0; i < this.NUM_BOMBS; i++){\n    var radius = radius || (Math.random() * 10) + 10;\n    bombs.push(new Bomb(\n      {\n        pos: [this.SpawnLocation.pos[0], this.SpawnLocation.pos[1]],\n        game: this,\n        radius: radius\n      }\n    ));\n  }\n  return bombs;\n};\n\nGame.prototype.addItem = function() {\n  var xPos = Math.abs(this.playerMouse.pos[0] - 800);\n  var yPos = Math.abs(this.playerMouse.pos[1] - 600);\n  this.item.push(new Item(\n    {\n      game: this,\n      pos: [xPos, yPos]\n    }\n  ));\n  this.bigBombTimer = Math.floor((this.bigBombTimer * 2) / 3);\n  this.smallBombTimer = Math.floor((this.smallBombTimer * 2) / 3);\n};\n\nGame.prototype.itemPickUp = function () {\n  this.bombs = [];\n  this.item = [];\n};\n\nGame.prototype.bounce = function (pos, vel, radius) {\n  if (pos[0] + radius > this.DIM_X) {\n    vel[0] = -vel[0];\n    pos[0] += (vel[0] * 2);\n  }\n  if (pos[1] + radius > this.DIM_Y) {\n    vel[1] = -vel[1];\n    pos[1] += (vel[1] * 2);\n  }\n  if (pos[0] - radius < 0) {\n    vel[0] = -vel[0];\n    pos[0] += (vel[0] * 2);\n  }\n  if (pos[1] - radius < 0) {\n    vel[1] = -vel[1];\n    pos[1] += (vel[1] * 2);\n  }\n  return vel;\n};\n\nGame.prototype.allObjects = function () {\n  return this.bombs.concat(this.SpawnLocation).concat(this.playerMouse).concat(this.item);\n};\n\nGame.prototype.checkCollisions = function (){\n  var that = this;\n  this.allObjects().forEach(function (object, index){\n    for (var i = index + 1; i < that.allObjects().length; i++) {\n        var result = object.isCollidedWith(that.allObjects()[i]);\n        if ( result === 'Game Over'){\n          that.gameOver = true;\n        }else if (result === 'item picked up'){\n          that.itemPickUp();\n        }\n    }\n  });\n};\n\nGame.prototype.draw = function (ctx) {\n\n  ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n\n  ctx.fillStyle = 'rgb(100, 100, 100)';\n  ctx.fillRect(0, 0, this.DIM_X, this.DIM_Y);\n\n  ctx.fillStyle = \"#EEEEEE\";\n\tctx.font = \"normal normal 24px Techno\";\n  ctx.fillText(\"Score:\", 10, 30);\n  ctx.fillText((this.score / 50), 75, 31);\n  ctx.fillText(\"Highscore:\", 10, 60);\n  ctx.fillText((this.highscore / 50), 120, 61);\n  if(this.gameOver === true){\n    if(this.highscore === this.score && this.highscore !== 0){\n      ctx.fillStyle = \"#EEEEEE\";\n      ctx.font = \"normal normal 50px Techno\";\n      ctx.fillText(\"New High Score!\", 250, 200);\n      ctx.fillStyle = Util.getRandomColor();\n      ctx.fillText((this.highscore / 50) + ' seconds', 300, 265);\n    }else{\n      ctx.fillStyle = \"#EEEEEE\";\n      ctx.font = \"normal normal 50px Techno\";\n      ctx.fillText(\"Game Over\", 300, 250);\n    }\n    ctx.fillStyle = \"#EEEEEE\";\n    ctx.font = \"normal normal 50px Techno\";\n    ctx.fillText('Click to Play Again', 225, 325);\n  }\n\n\n  this.allObjects().forEach(function (object) {\n    object.draw(ctx);\n  });\n};\n\nGame.prototype.moveObjects = function () {\n  this.allObjects().forEach(function (object) {\n    object.move();\n  });\n};\n\nGame.prototype.updateBoard = function(){\n  this.score += 1;\n  if (this.score > this.highscore){\n    this.highscore = this.score;\n  }\n  if ((this.score / 50) % 15 === 0){\n    this.addItem();\n  }\n  if (this.score % this.bigBombTimer === 0){\n    this.bombs = this.bombs.concat(this.addBombs(50));\n  }else if (this.score % this.smallBombTimer === 0){\n    this.bombs = this.bombs.concat(this.addBombs());\n  }\n\n};\n\nGame.prototype.endGame = function(ctx){\n  if (this.gameOver === true){\n    this.playerMouse.color = \"#b22727\";\n    this.bombs = [];\n    this.item = [];\n    this.bigBombTimer = 400;\n    this.smallBombTimer = 100;\n    canvas.addEventListener('click', function(event){\n      if (this.gameOver === true){\n        this.resetGame();\n      }\n    }.bind(this));\n  }else{\n    this.updateBoard();\n  }\n};\n\nGame.prototype.resetGame = function () {\n  this.score = 0;\n  this.bombs = this.addBombs();\n  this.gameOver = false;\n  this.playerMouse.color = '#83F52C';\n};\n\nGame.prototype.step = function(ctx){\n  this.moveObjects();\n  this.checkCollisions();\n  this.endGame(ctx);\n};\n\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 2\n ** module chunks = 0\n **/","var Util = require('./util.js');\nvar movingObject = require('./movingObject.js');\nvar UserMouse = require('./player_mouse');\n\n\nfunction Bomb (args) {\n    args['color'] = Bomb.COLOR;\n    args['vel'] = Util.randomVec(args['radius']/6);\n    return movingObject.call(this, args);\n}\n\nBomb.COLOR = \"#000000\";\n\nUtil.inherits(Bomb, movingObject);\n\nmodule.exports = Bomb;\n\nBomb.prototype.isCollidedWith = function(otherObject){\n  var dist = Math.sqrt(Math.pow(this.pos[0] - otherObject.pos[0], 2) +\n    Math.pow(this.pos[1] - otherObject.pos[1], 2));\n  if (dist < (this.radius + otherObject.radius)){\n    if (otherObject instanceof Bomb){\n      this.reflect(otherObject);\n    }if (otherObject instanceof UserMouse){\n      return 'Game Over';\n    }\n  }else {\n    return false;\n  }\n};\n\nBomb.prototype.reflectFlair = function (otherBall) {\n  var canvasEl = document.getElementById(\"game-canvas\");\n  var ctx = canvasEl.getContext(\"2d\");\n\n  var xCollisionPoint =\n    ((this.pos[0] * otherBall.radius) + (otherBall.pos[0] * this.radius)) /\n    (this.radius + otherBall.radius);\n  var yCollisionPoint =\n    ((this.pos[1] * otherBall.radius) + (otherBall.pos[1] * this.radius)) /\n    (this.radius + otherBall.radius);\n  ctx.fillStyle = \"#b22727\";\n  ctx.beginPath();\n  ctx.arc(\n    xCollisionPoint,\n    yCollisionPoint,\n    2,\n    2 * Math.PI,\n    false\n  );\n  ctx.fill();\n};\n\nBomb.prototype.reflect = function(otherBall){\n  var newThisXVel = (this.vel[0] * (this.radius - otherBall.radius) +\n                (2 * otherBall.radius * otherBall.vel[0])) /\n                (this.radius + otherBall.radius);\n  var newOtherXVel = (otherBall.vel[0] * (otherBall.radius - this.radius) +\n                (2 * this.radius * this.vel[0])) /\n                (this.radius + otherBall.radius);\n  var newOtherYVel = (otherBall.vel[1] * (otherBall.radius - this.radius) +\n                (2 * this.radius * this.vel[1])) /\n                (this.radius + otherBall.radius);\n  var newThisYVel = (this.vel[1] * (this.radius - otherBall.radius) +\n                (2 * otherBall.radius * otherBall.vel[1])) /\n                (this.radius + otherBall.radius);\n\n  this.pos[0] += newThisXVel;\n  otherBall.pos[0] += newOtherXVel;\n  this.pos[1] += newThisYVel;\n  otherBall.pos[1] += newOtherYVel;\n\n  this.vel[0] = newThisXVel;\n  otherBall.vel[0] = newOtherXVel;\n  this.vel[1] = newThisYVel;\n  otherBall.vel[1] = newOtherYVel;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bomb.js\n ** module id = 3\n ** module chunks = 0\n **/","function Util () {\n\n}\n\nUtil.inherits = function (ChildClass, ParentClass) {\n  var Surrogate = function () {};\n  Surrogate.prototype = ParentClass.prototype;\n  ChildClass.prototype = new Surrogate();\n  ChildClass.prototype.constructor = ChildClass;\n};\n\nUtil.randomVec = function (length) {\n  var negatives = [-1, 1];\n  var xVel = ((Math.random() * length*2) - length) *\n              negatives[Math.floor(Math.random() * negatives.length)];\n  var yVel = Math.sqrt(Math.pow(length, 2) - Math.pow(xVel, 2)) *\n              negatives[Math.floor(Math.random() * negatives.length)];\n\n  return [xVel,yVel];\n};\n\nUtil.setVec = function(length){\n  var negatives = [-1, 1];\n  if (length > 5){\n    var xVel = ((Math.random() * length*2) - length) *\n                negatives[Math.floor(Math.random() * negatives.length)];\n    var yVel = Math.sqrt(Math.pow(length, 2) - Math.pow(xVel, 2)) *\n                negatives[Math.floor(Math.random() * negatives.length)];\n  }else{\n    var xVel = 0;\n    var yVel = 0;\n  }\n\n\n  return [xVel, yVel];\n};\n\nUtil.getRandomColor = function () {\n    var letters = '0123456789ABCDEF'.split('');\n    var color = '#';\n    for (var i = 0; i < 6; i++ ) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 4\n ** module chunks = 0\n **/","function MovingObject (args) {\n  this.pos = args['pos'];\n  this.vel = args['vel'];\n  this.radius = args['radius'];\n  this.color = args['color'];\n  this.game = args['game'];\n}\n\nMovingObject.prototype.draw = function (ctx) {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n\n  ctx.arc(\n    this.pos[0],\n    this.pos[1],\n    this.radius,\n    0,\n    2 * Math.PI,\n    false\n  );\n\n  ctx.fill();\n};\n\nMovingObject.prototype.move = function() {\n  this.pos[0] += this.vel[0];\n  this.pos[1] += this.vel[1];\n  this.vel = this.game.bounce(this.pos, this.vel, this.radius);\n};\n\nMovingObject.prototype.isCollidedWith = function(otherObject){\n  var dist = Math.sqrt(Math.pow(this.pos[0] - otherObject.pos[0], 2) +\n    Math.pow(this.pos[1] - otherObject.pos[1], 2));\n  if (dist < (this.radius + otherObject.radius)){\n    return true;\n  }else {\n    return false;\n  }\n};\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/movingObject.js\n ** module id = 5\n ** module chunks = 0\n **/","var canvas = document.getElementById('game-canvas');\nvar Item = require('./item');\n\n\nvar UserMouse = function(options){\n  this.radius = 15;\n  this.color = '#27e833';\n  this.vel = [0,0];\n  this.pos = [425, 150];\n\n  canvas.addEventListener('mousemove', function(event){\n    this.pos = getCursorPosition(event);\n  }.bind(this));\n};\n\nfunction getCursorPosition(event) {\n  var bounds = canvas.getBoundingClientRect();\n\n  if (event.clientX > 500){\n    var xPos = event.clientX - bounds.left - 15;\n  }else{\n    var xPos = event.clientX - bounds.left + 15;\n  }\n  if (event.clientY > 500){\n    var yPos = event.clientY - bounds.top - 15;\n  }else{\n    var yPos = event.clientY - bounds.top + 15;\n  }\n  \n  return ([xPos, yPos]);\n}\n\nUserMouse.prototype.draw = function(ctx) {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n  ctx.arc(\n    this.pos[0],\n    this.pos[1],\n    this.radius,\n    0,\n    2 * Math.PI,\n    false\n  );\n\n  ctx.fill();\n};\n\nUserMouse.prototype.move = function () {\n\n};\n\nUserMouse.prototype.isCollidedWith = function(otherObject){\n  var dist = Math.sqrt(Math.pow(this.pos[0] - otherObject.pos[0], 2) +\n    Math.pow(this.pos[1] - otherObject.pos[1], 2));\n  if (dist < (this.radius + otherObject.radius)){\n    if (otherObject instanceof Item){\n      return 'item picked up';\n    }\n  }else {\n    return false;\n  }\n};\n\nmodule.exports = UserMouse;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/player_mouse.js\n ** module id = 6\n ** module chunks = 0\n **/","var Util = require('./util.js');\nvar movingObject = require('./movingObject.js');\n\nfunction Item (args){\n  args['color'] = Item.COLOR;\n  args['radius'] = 10;\n  args['vel'] = Util.randomVec(args['radius']/6);\n  return movingObject.call(this, args);\n}\n\nItem.COLOR = '#00F5FF';\n\nUtil.inherits(Item, movingObject);\n\nmodule.exports = Item;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/item.js\n ** module id = 7\n ** module chunks = 0\n **/","var movingObject = require('./movingObject.js');\nvar Util = require('./util.js');\n\n//local variables\nSpawnLocation.COLOR = 'rgb(200, 0, 0)';\n\n//entry point\nfunction SpawnLocation (args) {\n    args['color'] = SpawnLocation.COLOR;\n    args['radius'] = 50;\n    args['vel'] = [1,1];\n    return movingObject.call(this, args);\n}\n\nUtil.inherits(SpawnLocation, movingObject);\n\nmodule.exports = SpawnLocation;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/spawn_location.js\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}